{"version":3,"sources":["components/pages/home/Coin.js","components/pages/home/Search.js","components/pages/home/List.js","components/pages/Home.js","components/pages/home/CoinPage.js","App.js","index.js"],"names":["Coin","input","coinData","currencySymbol","currency","length","id","includes","window","screen","width","className","src","image","alt","to","name","symbol","Math","round","current_price","price_change_percentage_24h","market_cap","total_volume","toUpperCase","Search","setInput","onChange","e","target","value","type","placeholder","onClick","List","useState","cryptoData","setCryptoData","setCurrency","useEffect","updateData","a","axios","get","data","title","Item","variant","map","coin","index","Home","CoinPage","props","history","useHistory","setCoinData","coinInfo","setCoinInfo","interval","setInterval","match","params","getData","info","prices","convertTime","unix","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","goBack","small","thumb","dates","i","push","ctx","document","getElementById","labels","datasets","label","fill","borderColor","undefined","myCharts","destroy","Chart","options","tooltips","intersect","elements","point","radius","legend","display","scales","yAxes","ticks","fontColor","fontSize","padding","callback","xAxes","maxRotation","minRotation","maxTicksLimit","animation","duration","responsiveAnimationDuration","aspectRatio","renderGraph","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a915952e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Coin = ({ input, coinData, currency }) => {\n  let currencySymbol = \"$\";\n\n  switch (currency) {\n    case \"eur\":\n      currencySymbol = \"€\";\n      break;\n    case \"gbp\":\n      currencySymbol = \"£\";\n      break;\n    case \"cad\":\n      currencySymbol = \"$\";\n      break;\n    case \"jpy\":\n      currencySymbol = \"¥\";\n      break;\n    default:\n      break;\n  }\n\n  if (input.length === 0 || coinData.id.includes(input)) {\n    if (window.screen.width > 1280)\n      return (\n        <tr className=\"coin-table-row\">\n          <td>\n            <img src={coinData.image} alt=\"logo\" className=\"coin-logo\" />\n            <Link to={`/coinpage/${coinData.id}`}>{coinData.name}</Link>\n            <span className=\"coin-symbol\"> {coinData.symbol}</span>\n          </td>\n          <td>\n            {currencySymbol}\n            {Math.round(coinData.current_price * 100) / 100}\n          </td>\n          <td\n            className={\n              coinData.price_change_percentage_24h > 0\n                ? \"positive-change\"\n                : \"negative-change\"\n            }\n          >\n            {Math.round(coinData.price_change_percentage_24h * 100) / 100}%\n          </td>\n          <td>\n            {currencySymbol}\n            {Math.round(coinData.market_cap * 100) / 100}\n          </td>\n          <td>{coinData.total_volume}</td>\n        </tr>\n      );\n    else\n      return (\n        <tr className=\"coin-table-row\">\n          <td>\n            <img src={coinData.image} alt=\"logo\" className=\"coin-logo\" />\n            <Link to={`/coinpage/${coinData.id}`}>\n              {coinData.symbol.toUpperCase()}\n            </Link>\n          </td>\n          <td>\n            {currencySymbol}\n            {Math.round(coinData.current_price * 100) / 100}\n          </td>\n          <td\n            className={\n              coinData.price_change_percentage_24h > 0\n                ? \"positive-change\"\n                : \"negative-change\"\n            }\n          >\n            {Math.round(coinData.price_change_percentage_24h * 100) / 100}%\n          </td>\n        </tr>\n      );\n  } else return null;\n};\n\nexport default Coin;\n","import React from \"react\";\nimport * as AiIcons from \"react-icons/ai\";\n\nimport \"./Search.css\";\n\nfunction Search({ input, setInput }) {\n  const inputHandler = (e) => {\n    setInput(e.target.value);\n  };\n\n  const clearInput = () => {\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <div className=\"search-bar-icon\">\n        <AiIcons.AiOutlineSearch />\n      </div>\n      <div className=\"search-bar-input\">\n        <input onChange={inputHandler} type=\"text\" placeholder=\"Search\" value={input}/>\n      </div>\n      <div onClick={clearInput} className=\"search-bar-clear\">\n        <AiIcons.AiOutlineClose />\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as ReactBootStrap from \"react-bootstrap\";\n\nimport Coin from \"./Coin\";\n\nimport \"./List.css\";\nimport Search from \"./Search\";\n\nconst List = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currency, setCurrency] = useState(\"usd\");\n\n  useEffect(() => {\n    updateData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const updateData = async () => {\n    const data = await axios.get(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h`\n    );\n\n    setCryptoData(data.data);\n  };\n\n  const renderCoinData = () => {\n    return cryptoData.map((coin, index) => {\n      return (\n        <Coin\n          input={input}\n          key={index}\n          coinData={cryptoData[index]}\n          currency={currency}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"coin-list\">\n      <div className=\"coin-list-options\">\n        <ReactBootStrap.DropdownButton\n          id=\"dropdown-basic-button\"\n          title={currency.toUpperCase()}\n        >\n          <ReactBootStrap.Dropdown.Item\n            onClick={() => {\n              setCurrency(\"usd\");\n            }}\n          >\n            USD (default)\n          </ReactBootStrap.Dropdown.Item>\n          <ReactBootStrap.Dropdown.Item\n            onClick={() => {\n              setCurrency(\"eur\");\n            }}\n          >\n            EUR\n          </ReactBootStrap.Dropdown.Item>\n          <ReactBootStrap.Dropdown.Item\n            onClick={() => {\n              setCurrency(\"gbp\");\n            }}\n          >\n            GBP\n          </ReactBootStrap.Dropdown.Item>\n          <ReactBootStrap.Dropdown.Item\n            onClick={() => {\n              setCurrency(\"cad\");\n            }}\n          >\n            CAD\n          </ReactBootStrap.Dropdown.Item>\n          <ReactBootStrap.Dropdown.Item\n            onClick={() => {\n              setCurrency(\"jpy\");\n            }}\n          >\n            JPY\n          </ReactBootStrap.Dropdown.Item>\n        </ReactBootStrap.DropdownButton>\n\n        <Search input={input} setInput={setInput} />\n      </div>\n      <ReactBootStrap.Table variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n            <th>24h %</th>\n            {window.screen.width >= 1280 ? <th>Market Cap</th> : null}\n            {window.screen.width >= 1280 ? <th>Volume</th> : null}\n          </tr>\n        </thead>\n        {cryptoData.length > 0 ? <tbody>{renderCoinData()}</tbody> : null}\n      </ReactBootStrap.Table>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react'\nimport List from './home/List'\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <List />\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"chart.js\";\nimport { AiFillCaretLeft } from \"react-icons/ai\";\n\nimport \"./CoinPage.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CoinPage = (props) => {\n  let history = useHistory();\n\n  const [coinData, setCoinData] = useState([]);\n  const [coinInfo, setCoinInfo] = useState([]);\n  const [interval, setInterval] = useState(10000);\n\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [interval]);\n\n  const getData = async () => {\n    const data = await axios.get(\n      `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=${interval}`\n    );\n    const info = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}\n    `);\n\n    setCoinData(data.data.prices);\n\n    setCoinInfo(info.data);\n  };\n\n  const convertTime = (unix) => {\n    const a = new Date(unix);\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    const year = a.getFullYear();\n    const month = months[a.getMonth()];\n    const date = a.getDate();\n    const hour = a.getHours();\n    if (interval === 1) {\n      return `${((hour + 11) % 12) + 1}${hour < 12 ? \"AM\" : \"PM\"}`;\n    }\n    if (interval <= 30) return `${date} ${month}`;\n    return `${month} ${year}`;\n  };\n\n  const renderGraph = () => {\n    let dates = [];\n    let prices = [];\n\n    for (let i = 0; i < coinData.length; i++) {\n      dates.push(convertTime(coinData[i][0]));\n      prices.push(Math.round(coinData[i][1] * 100) / 100);\n    }\n\n    const ctx = document.getElementById(\"chart\");\n\n    const data = {\n      labels: dates,\n      datasets: [\n        {\n          label: \"Price\",\n          data: prices,\n          fill: false,\n          borderColor: \"rgb(153, 153, 153)\",\n        },\n      ],\n    };\n    const options = {\n      type: \"LineWithLine\",\n      tooltips: {\n        intersect: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n      },\n      legend: {\n        display: false,\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              fontColor: \"rgb(230,230,230)\",\n              fontSize: 18,\n              padding: 40,\n              callback: function (value) {\n                return \"$ \" + value;\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            ticks: {\n              fontColor: \"rgb(230,230,230)\",\n              fontSize: 18,\n              padding: 50,\n              maxRotation: 0,\n              minRotation: 0,\n              maxTicksLimit: 11,\n            },\n          },\n        ],\n      },\n      animation: {\n        duration: 0,\n      },\n      responsiveAnimationDuration: 0,\n    };\n\n    const mobileOptions = {\n      aspectRatio: 0.5,\n      type: \"LineWithLine\",\n      tooltips: {\n        intersect: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n      },\n      legend: {\n        display: false,\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              fontColor: \"rgb(230,230,230)\",\n              fontSize: 8,\n              padding: 10,\n              callback: function (value) {\n                return \"$ \" + value;\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            ticks: {\n              fontColor: \"rgb(230,230,230)\",\n              fontSize: 8,\n              padding: 10,\n              maxRotation: 0,\n              minRotation: 0,\n              maxTicksLimit: 5,\n            },\n          },\n        ],\n      },\n      animation: {\n        duration: 0,\n      },\n      responsiveAnimationDuration: 0,\n    };\n\n    if (window.myCharts !== undefined) window.myCharts.destroy();\n\n    if (window.screen.width >= 1280) {\n      window.myCharts = new Chart(ctx, {\n        type: \"line\",\n        data: data,\n        options: options,\n      });\n    }\n    else {\n      window.myCharts = new Chart(ctx, {\n        type: \"line\",\n        data: data,\n        options: mobileOptions,\n      });\n    }\n  };\n\n  const renderTitle = () => {\n    return (\n      <div className=\"graph-title\">\n        <AiFillCaretLeft\n          onClick={() => history.goBack()}\n          className=\"back-btn\"\n        />\n        {window.screen.width >= 1280 ? (\n          <>\n            <img src={coinInfo.image.small} alt=\"logo\" />\n            <h1 className=\"graph-title-name\">{id}</h1>\n          </>\n        ) : (\n          <>\n            <img src={coinInfo.image.thumb} alt=\"logo\" />\n            <h1 className=\"graph-title-name\">{id}</h1>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"graph-container\">\n      <div className=\"graph-heading\">\n        {coinInfo.length !== 0 ? renderTitle() : null}\n        <div className=\"interval-selector\">\n          <button\n            onClick={() => setInterval(1)}\n            className={interval === 1 ? \"interval underline\" : \"interval\"}\n          >\n            1d\n          </button>\n          <button\n            onClick={() => setInterval(7)}\n            className={interval === 7 ? \"interval underline\" : \"interval\"}\n          >\n            7d\n          </button>\n          <button\n            onClick={() => setInterval(30)}\n            className={interval === 30 ? \"interval underline\" : \"interval\"}\n          >\n            1m\n          </button>\n          <button\n            onClick={() => setInterval(356)}\n            className={interval === 356 ? \"interval underline\" : \"interval\"}\n          >\n            1y\n          </button>\n          <button\n            onClick={() => setInterval(10000)}\n            className={interval === 10000 ? \"interval underline\" : \"interval\"}\n          >\n            Max\n          </button>\n        </div>\n      </div>\n      <canvas id=\"chart\"></canvas>\n\n      {coinData.length !== 0 ? renderGraph() : null}\n    </div>\n  );\n};\n\nexport default CoinPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\n// import Navbar from \"./components/navbar/Navbar\";\nimport Home from \"./components/pages/Home\";\n// import News from \"./components/pages/News\";\n// import About from \"./components/pages/About\";\n// import Contact from \"./components/pages/Contact\";\nimport CoinPage from \"./components/pages/home/CoinPage\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                {/* <Navbar /> */}\n                <Switch>\n                    <Route path=\"/\" exact component={Home}/>\n                    {/* <Route path=\"/news\" component={News}/>\n                    <Route path=\"/about\" component={About}/>\n                    <Route path=\"/contact\" component={Contact}/> */}\n                    <Route path=\"/coinpage/:id\" component={CoinPage}/>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}